UPDATE
-----
UPDATE parser_test SET name = "aaa" WHERE id = 1 ORDER BY id + 1 LIMIT 5
-----
MariaStan\Ast\Query\UpdateQuery
(
	[table] => MariaStan\Ast\Query\TableReference\Table
		(
			[name] => MariaStan\Ast\Query\TableReference\TableName
				(
					[name] => parser_test
				)
			[indexHints] => Array
				(
				)
		)
	[assignments] => Array
		(
			[0] => MariaStan\Ast\Expr\Assignment
				(
					[target] => MariaStan\Ast\Expr\Column
						(
							[name] => name
						)
					[expression] => MariaStan\Ast\Expr\LiteralString
						(
							[value] => aaa
							[firstConcatPart] => aaa
						)
				)
		)
	[where] => MariaStan\Ast\Expr\BinaryOp
		(
			[operation] => MariaStan\Ast\Expr\BinaryOpTypeEnum::EQUAL
			[left] => MariaStan\Ast\Expr\Column
				(
					[name] => id
				)
			[right] => MariaStan\Ast\Expr\LiteralInt
				(
					[value] => 1
				)
		)
	[orderBy] => MariaStan\Ast\OrderBy
		(
			[expressions] => Array
				(
					[0] => MariaStan\Ast\ExprWithDirection
						(
							[expr] => MariaStan\Ast\Expr\BinaryOp
								(
									[operation] => MariaStan\Ast\Expr\BinaryOpTypeEnum::PLUS
									[left] => MariaStan\Ast\Expr\Column
										(
											[name] => id
										)
									[right] => MariaStan\Ast\Expr\LiteralInt
										(
											[value] => 1
										)
								)
							[direction] => MariaStan\Ast\DirectionEnum::ASC
						)
				)
		)
	[limit] => MariaStan\Ast\Expr\LiteralInt
		(
			[value] => 5
		)
	[ignoreErrors] => false
)
-----
UPDATE parser_test SET name = "aaa" WHERE id = 1 ORDER BY id + 1
-----
MariaStan\Ast\Query\UpdateQuery
(
	[table] => MariaStan\Ast\Query\TableReference\Table
		(
			[name] => MariaStan\Ast\Query\TableReference\TableName
				(
					[name] => parser_test
				)
			[indexHints] => Array
				(
				)
		)
	[assignments] => Array
		(
			[0] => MariaStan\Ast\Expr\Assignment
				(
					[target] => MariaStan\Ast\Expr\Column
						(
							[name] => name
						)
					[expression] => MariaStan\Ast\Expr\LiteralString
						(
							[value] => aaa
							[firstConcatPart] => aaa
						)
				)
		)
	[where] => MariaStan\Ast\Expr\BinaryOp
		(
			[operation] => MariaStan\Ast\Expr\BinaryOpTypeEnum::EQUAL
			[left] => MariaStan\Ast\Expr\Column
				(
					[name] => id
				)
			[right] => MariaStan\Ast\Expr\LiteralInt
				(
					[value] => 1
				)
		)
	[orderBy] => MariaStan\Ast\OrderBy
		(
			[expressions] => Array
				(
					[0] => MariaStan\Ast\ExprWithDirection
						(
							[expr] => MariaStan\Ast\Expr\BinaryOp
								(
									[operation] => MariaStan\Ast\Expr\BinaryOpTypeEnum::PLUS
									[left] => MariaStan\Ast\Expr\Column
										(
											[name] => id
										)
									[right] => MariaStan\Ast\Expr\LiteralInt
										(
											[value] => 1
										)
								)
							[direction] => MariaStan\Ast\DirectionEnum::ASC
						)
				)
		)
	[ignoreErrors] => false
)
-----
UPDATE parser_test SET name = "aaa", id = id
-----
MariaStan\Ast\Query\UpdateQuery
(
	[table] => MariaStan\Ast\Query\TableReference\Table
		(
			[name] => MariaStan\Ast\Query\TableReference\TableName
				(
					[name] => parser_test
				)
			[indexHints] => Array
				(
				)
		)
	[assignments] => Array
		(
			[0] => MariaStan\Ast\Expr\Assignment
				(
					[target] => MariaStan\Ast\Expr\Column
						(
							[name] => name
						)
					[expression] => MariaStan\Ast\Expr\LiteralString
						(
							[value] => aaa
							[firstConcatPart] => aaa
						)
				)
			[1] => MariaStan\Ast\Expr\Assignment
				(
					[target] => MariaStan\Ast\Expr\Column
						(
							[name] => id
						)
					[expression] => MariaStan\Ast\Expr\Column
						(
							[name] => id
						)
				)
		)
	[ignoreErrors] => false
)
-----
UPDATE parser_test SET name = "aaa" ORDER BY id ASC, name DESC
-----
MariaStan\Ast\Query\UpdateQuery
(
	[table] => MariaStan\Ast\Query\TableReference\Table
		(
			[name] => MariaStan\Ast\Query\TableReference\TableName
				(
					[name] => parser_test
				)
			[indexHints] => Array
				(
				)
		)
	[assignments] => Array
		(
			[0] => MariaStan\Ast\Expr\Assignment
				(
					[target] => MariaStan\Ast\Expr\Column
						(
							[name] => name
						)
					[expression] => MariaStan\Ast\Expr\LiteralString
						(
							[value] => aaa
							[firstConcatPart] => aaa
						)
				)
		)
	[orderBy] => MariaStan\Ast\OrderBy
		(
			[expressions] => Array
				(
					[0] => MariaStan\Ast\ExprWithDirection
						(
							[expr] => MariaStan\Ast\Expr\Column
								(
									[name] => id
								)
							[direction] => MariaStan\Ast\DirectionEnum::ASC
						)
					[1] => MariaStan\Ast\ExprWithDirection
						(
							[expr] => MariaStan\Ast\Expr\Column
								(
									[name] => name
								)
							[direction] => MariaStan\Ast\DirectionEnum::DESC
						)
				)
		)
	[ignoreErrors] => false
)
-----
UPDATE parser_test SET name = "aaa" WHERE id = 1 LIMIT 5
-----
MariaStan\Ast\Query\UpdateQuery
(
	[table] => MariaStan\Ast\Query\TableReference\Table
		(
			[name] => MariaStan\Ast\Query\TableReference\TableName
				(
					[name] => parser_test
				)
			[indexHints] => Array
				(
				)
		)
	[assignments] => Array
		(
			[0] => MariaStan\Ast\Expr\Assignment
				(
					[target] => MariaStan\Ast\Expr\Column
						(
							[name] => name
						)
					[expression] => MariaStan\Ast\Expr\LiteralString
						(
							[value] => aaa
							[firstConcatPart] => aaa
						)
				)
		)
	[where] => MariaStan\Ast\Expr\BinaryOp
		(
			[operation] => MariaStan\Ast\Expr\BinaryOpTypeEnum::EQUAL
			[left] => MariaStan\Ast\Expr\Column
				(
					[name] => id
				)
			[right] => MariaStan\Ast\Expr\LiteralInt
				(
					[value] => 1
				)
		)
	[limit] => MariaStan\Ast\Expr\LiteralInt
		(
			[value] => 5
		)
	[ignoreErrors] => false
)
-----
UPDATE parser_test SET name = DEFAULT
-----
MariaStan\Ast\Query\UpdateQuery
(
	[table] => MariaStan\Ast\Query\TableReference\Table
		(
			[name] => MariaStan\Ast\Query\TableReference\TableName
				(
					[name] => parser_test
				)
			[indexHints] => Array
				(
				)
		)
	[assignments] => Array
		(
			[0] => MariaStan\Ast\Expr\Assignment
				(
					[target] => MariaStan\Ast\Expr\Column
						(
							[name] => name
						)
					[expression] => MariaStan\Ast\Expr\ColumnDefault
						(
						)
				)
		)
	[ignoreErrors] => false
)
-----
UPDATE IGNORE parser_test SET name = "aa"
-----
MariaStan\Ast\Query\UpdateQuery
(
	[table] => MariaStan\Ast\Query\TableReference\Table
		(
			[name] => MariaStan\Ast\Query\TableReference\TableName
				(
					[name] => parser_test
				)
			[indexHints] => Array
				(
				)
		)
	[assignments] => Array
		(
			[0] => MariaStan\Ast\Expr\Assignment
				(
					[target] => MariaStan\Ast\Expr\Column
						(
							[name] => name
						)
					[expression] => MariaStan\Ast\Expr\LiteralString
						(
							[value] => aa
							[firstConcatPart] => aa
						)
				)
		)
	[ignoreErrors] => true
)
-----
UPDATE `parser_test` SET name = "aa"
-----
MariaStan\Ast\Query\UpdateQuery
(
	[table] => MariaStan\Ast\Query\TableReference\Table
		(
			[name] => MariaStan\Ast\Query\TableReference\TableName
				(
					[name] => parser_test
				)
			[indexHints] => Array
				(
				)
		)
	[assignments] => Array
		(
			[0] => MariaStan\Ast\Expr\Assignment
				(
					[target] => MariaStan\Ast\Expr\Column
						(
							[name] => name
						)
					[expression] => MariaStan\Ast\Expr\LiteralString
						(
							[value] => aa
							[firstConcatPart] => aa
						)
				)
		)
	[ignoreErrors] => false
)
-----
UPDATE `parser_test` SET parser_test.name = "aa"
-----
MariaStan\Ast\Query\UpdateQuery
(
	[table] => MariaStan\Ast\Query\TableReference\Table
		(
			[name] => MariaStan\Ast\Query\TableReference\TableName
				(
					[name] => parser_test
				)
			[indexHints] => Array
				(
				)
		)
	[assignments] => Array
		(
			[0] => MariaStan\Ast\Expr\Assignment
				(
					[target] => MariaStan\Ast\Expr\Column
						(
							[name] => name
							[tableName] => MariaStan\Ast\Query\TableReference\TableName
								(
									[name] => parser_test
								)
						)
					[expression] => MariaStan\Ast\Expr\LiteralString
						(
							[value] => aa
							[firstConcatPart] => aa
						)
				)
		)
	[ignoreErrors] => false
)
-----
UPDATE parser_test t SET t.name = "aa"
-----
MariaStan\Ast\Query\UpdateQuery
(
	[table] => MariaStan\Ast\Query\TableReference\Table
		(
			[name] => MariaStan\Ast\Query\TableReference\TableName
				(
					[name] => parser_test
				)
			[alias] => t
			[indexHints] => Array
				(
				)
		)
	[assignments] => Array
		(
			[0] => MariaStan\Ast\Expr\Assignment
				(
					[target] => MariaStan\Ast\Expr\Column
						(
							[name] => name
							[tableName] => MariaStan\Ast\Query\TableReference\TableName
								(
									[name] => t
								)
						)
					[expression] => MariaStan\Ast\Expr\LiteralString
						(
							[value] => aa
							[firstConcatPart] => aa
						)
				)
		)
	[ignoreErrors] => false
)
-----
UPDATE (SELECT * FROM parser_test) t, parser_test t2 SET t2.name = "aa"
-----
MariaStan\Ast\Query\UpdateQuery
(
	[table] => MariaStan\Ast\Query\TableReference\Join
		(
			[joinType] => MariaStan\Ast\Query\TableReference\JoinTypeEnum::CROSS_JOIN
			[leftTable] => MariaStan\Ast\Query\TableReference\Subquery
				(
					[query] => MariaStan\Ast\Query\SelectQuery\SimpleSelectQuery
						(
							[select] => Array
								(
									[0] => MariaStan\Ast\SelectExpr\AllColumns
										(
										)
								)
							[from] => MariaStan\Ast\Query\TableReference\Table
								(
									[name] => MariaStan\Ast\Query\TableReference\TableName
										(
											[name] => parser_test
										)
									[indexHints] => Array
										(
										)
								)
							[isDistinct] => false
							[isSqlCalcFoundRows] => false
						)
					[alias] => t
				)
			[rightTable] => MariaStan\Ast\Query\TableReference\Table
				(
					[name] => MariaStan\Ast\Query\TableReference\TableName
						(
							[name] => parser_test
						)
					[alias] => t2
					[indexHints] => Array
						(
						)
				)
		)
	[assignments] => Array
		(
			[0] => MariaStan\Ast\Expr\Assignment
				(
					[target] => MariaStan\Ast\Expr\Column
						(
							[name] => name
							[tableName] => MariaStan\Ast\Query\TableReference\TableName
								(
									[name] => t2
								)
						)
					[expression] => MariaStan\Ast\Expr\LiteralString
						(
							[value] => aa
							[firstConcatPart] => aa
						)
				)
		)
	[ignoreErrors] => false
)
-----
UPDATE (SELECT * FROM parser_test) t JOIN parser_test t2 ON t.id = t2.id SET t2.name = "aa"
-----
MariaStan\Ast\Query\UpdateQuery
(
	[table] => MariaStan\Ast\Query\TableReference\Join
		(
			[joinType] => MariaStan\Ast\Query\TableReference\JoinTypeEnum::INNER_JOIN
			[leftTable] => MariaStan\Ast\Query\TableReference\Subquery
				(
					[query] => MariaStan\Ast\Query\SelectQuery\SimpleSelectQuery
						(
							[select] => Array
								(
									[0] => MariaStan\Ast\SelectExpr\AllColumns
										(
										)
								)
							[from] => MariaStan\Ast\Query\TableReference\Table
								(
									[name] => MariaStan\Ast\Query\TableReference\TableName
										(
											[name] => parser_test
										)
									[indexHints] => Array
										(
										)
								)
							[isDistinct] => false
							[isSqlCalcFoundRows] => false
						)
					[alias] => t
				)
			[rightTable] => MariaStan\Ast\Query\TableReference\Table
				(
					[name] => MariaStan\Ast\Query\TableReference\TableName
						(
							[name] => parser_test
						)
					[alias] => t2
					[indexHints] => Array
						(
						)
				)
			[joinCondition] => MariaStan\Ast\Expr\BinaryOp
				(
					[operation] => MariaStan\Ast\Expr\BinaryOpTypeEnum::EQUAL
					[left] => MariaStan\Ast\Expr\Column
						(
							[name] => id
							[tableName] => MariaStan\Ast\Query\TableReference\TableName
								(
									[name] => t
								)
						)
					[right] => MariaStan\Ast\Expr\Column
						(
							[name] => id
							[tableName] => MariaStan\Ast\Query\TableReference\TableName
								(
									[name] => t2
								)
						)
				)
		)
	[assignments] => Array
		(
			[0] => MariaStan\Ast\Expr\Assignment
				(
					[target] => MariaStan\Ast\Expr\Column
						(
							[name] => name
							[tableName] => MariaStan\Ast\Query\TableReference\TableName
								(
									[name] => t2
								)
						)
					[expression] => MariaStan\Ast\Expr\LiteralString
						(
							[value] => aa
							[firstConcatPart] => aa
						)
				)
		)
	[ignoreErrors] => false
)
-----
UPDATE parser_test SET name = ? WHERE id = ? ORDER BY ? LIMIT ?
-----
MariaStan\Ast\Query\UpdateQuery
(
	[table] => MariaStan\Ast\Query\TableReference\Table
		(
			[name] => MariaStan\Ast\Query\TableReference\TableName
				(
					[name] => parser_test
				)
			[indexHints] => Array
				(
				)
		)
	[assignments] => Array
		(
			[0] => MariaStan\Ast\Expr\Assignment
				(
					[target] => MariaStan\Ast\Expr\Column
						(
							[name] => name
						)
					[expression] => MariaStan\Ast\Expr\Placeholder
						(
							[name] => 1
						)
				)
		)
	[where] => MariaStan\Ast\Expr\BinaryOp
		(
			[operation] => MariaStan\Ast\Expr\BinaryOpTypeEnum::EQUAL
			[left] => MariaStan\Ast\Expr\Column
				(
					[name] => id
				)
			[right] => MariaStan\Ast\Expr\Placeholder
				(
					[name] => 2
				)
		)
	[orderBy] => MariaStan\Ast\OrderBy
		(
			[expressions] => Array
				(
					[0] => MariaStan\Ast\ExprWithDirection
						(
							[expr] => MariaStan\Ast\Expr\Placeholder
								(
									[name] => 3
								)
							[direction] => MariaStan\Ast\DirectionEnum::ASC
						)
				)
		)
	[limit] => MariaStan\Ast\Expr\Placeholder
		(
			[name] => 4
		)
	[ignoreErrors] => false
)
-----
UPDATE parser_test SET parser_test.name = "aaa"
-----
MariaStan\Ast\Query\UpdateQuery
(
	[table] => MariaStan\Ast\Query\TableReference\Table
		(
			[name] => MariaStan\Ast\Query\TableReference\TableName
				(
					[name] => parser_test
				)
			[indexHints] => Array
				(
				)
		)
	[assignments] => Array
		(
			[0] => MariaStan\Ast\Expr\Assignment
				(
					[target] => MariaStan\Ast\Expr\Column
						(
							[name] => name
							[tableName] => MariaStan\Ast\Query\TableReference\TableName
								(
									[name] => parser_test
								)
						)
					[expression] => MariaStan\Ast\Expr\LiteralString
						(
							[value] => aaa
							[firstConcatPart] => aaa
						)
				)
		)
	[ignoreErrors] => false
)